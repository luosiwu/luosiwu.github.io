<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[2018热身赛心得]]></title>
      <url>/2018/04/03/2018%E7%83%AD%E8%BA%AB%E8%B5%9B_%E7%BD%9745/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>#关于比赛本身：<br>这次热身赛收获很大，没有白去，暴露出了许多问题，其他机器人兵种我这里就不说了，毕竟不是我负责的，但问题也是显而易见的。今年我仍然负责步兵机器人，<br><img src="/img/l45.jpg" alt="图片名称"><br><a id="more"></a><br>以弥补去年留下的遗憾（在他们眼里是遗憾，可其实我还不确定，这个在另一篇文章再说吧）。这次热身赛的感觉就像是去年的分区赛，赛前连刷了两夜，最后程序还是没出来，因为这就是个错误，之前和视觉那边缺少交流，导致临近的三天才来联调，要联调的东西我才知道，之前没做准备，所以临走几天的联调基本是没什么用的。对于这个问题的根本原因，没错，就是缺少交流，而缺少交流的原因在于我和视觉的学弟，还是应该多主动一点的，主动一点总是会有改变的，一昧的被动只会什么也改变不了，也不会创造出什么好的结果。    </p>
<p>接下来讲的是步兵的控制问题，操作手控制云台的体验手感极差，出现这种问题是必然的，因为热身赛之前就没有测试过，并不是说没有想过要测试，是因为测试需要图传，而之前也有试过几次图传的连接问题，和队长以及队友也讨论过这个问题，最终问题还是没有解决，只是以判定图传发射端坏了这一结果不了了事，但其实我知道，大家应该也明白图传不会这么容易坏的，今天回来我又测试了一下，因为才刚拿回来，是不可能坏的，结果还是和之前一样，没连上……所以我们之前实验室的图传发射端并没有问题。所以这里又说明我不自信，过分依赖队友，当遇到大家都解决不了的问题时就认为这个问题很难，先放那，但是放那只是放那，它不会自己变好，既然它与我负责的东西有关，我就应该把它弄好，而不是放那等着其他人弄，就像鑫哥说的，至少到目前为止大家都只做自己分内的事。</p>
<p>然后就是最重要的热量控制，功率控制问题。热量控制我并没有好好写，这真的完全是我的不对，对自己要求不够高，在实验室给队友演示的还可以，没有超功率，就有点飘飘然了，但是自己心里是明白的，这样其实还远远不够，但是总爱抱着不在乎的心态，然后心里说，先这样吧。为此热身赛还和队长吵了起来，因为在热身赛场地休息取人工暴力测试的时候还是超功率了，但是在实验室这样测试是没有超的，当时我也挺意外的，然后我看了下功率的变化过程，从17骤变到170，去热身赛的几个队友看到这样当然不高兴了，然后队长叫我趁离上场还有时间叫我赶紧调调，保证不超功率，我当场就直接拒绝了，然后就噼里啪啦噼里啪啦。我有我的原因，他有他的苦衷。他不能理解我的原因，我知道但是不能体会他的苦衷，当时也没想作为一个队长的苦衷，当时想的是为什么张兵变成一个不管不顾喜欢命令别人的队长了，当时我的原因是如果带回公寓调是不可能的，因为前一天已经被举报扰民了，警察都来了，要在公寓里暴力测试功率不可能的，还有就是我不确定改了之后会比现在好，可能连断桥都爬不了了，要在这么紧张的环境下突然写一个更好的功率算法…我真的没有信心~</p>
<p>还有就是短线焊线的问题，想了想还是我的不对，之前认为张兵是管电路的，有什么线的问题就跟他说，有时候有用，有时候没用，尤其快热身赛时他很忙，因为他是队长，他得管人，所以就算是电路我也不应这么依赖他的，毕竟那些我都能做。</p>
<p>改变</p>
<h2 id="二级标题666"><a href="#二级标题666" class="headerlink" title="二级标题666"></a>二级标题666</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><p><img src="/img/7.jpg" alt="图片名称"><br><!--more--><br><em>斜体文本</em>     <em>斜体文本</em>位<br><strong>粗体文本</strong>    <strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong>    <strong><em>粗斜体文本</em></strong></p>
<p>常用链接方法<br>文字链接 <a href="https://luosiwu.github.io" target="_blank" rel="noopener">我的git</a><br>网址链接 <a href="https://chwshuang.github.io" target="_blank" rel="noopener">https://chwshuang.github.io</a><br>高级链接技巧<br>这个链接用 1 作为网址变量 <a href="http://www.google.com/" target="_blank" rel="noopener">Google</a>.<br>这个链接用 yahoo 作为网址变量 <a href="http://www.yahoo.com/" target="_blank" rel="noopener">Yahoo!</a>.<br>然后在文档的结尾为变量赋值（网址）</p>
<p>换行<br>如果另起一行，只需在当前行结尾加 2 个空格  </p>
]]></content>
      
        <categories>
            
            <category> 个人secret </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[步兵云台YAW轴速度环系统辨识过程]]></title>
      <url>/2018/03/22/RM%E4%BA%91%E5%8F%B0%E7%B3%BB%E7%BB%9F%E8%BE%A8%E8%AF%86%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="1-摘要"><a href="#1-摘要" class="headerlink" title="1. 摘要"></a>1. 摘要</h1><p>本文介绍了对RoboMaster步兵机器人yaw轴云台速度环的系统辨识过程。引入频域分析法、传递函数、系统辨识的基本概念，介绍了J-Scope、Keil和MATLAB的fdatool和system Identification工具的应用技巧。</p>
<h1 id="2-基本概念"><a href="#2-基本概念" class="headerlink" title="2. 基本概念"></a>2. 基本概念</h1><a id="more"></a>
<h2 id="2-1-频域分析法"><a href="#2-1-频域分析法" class="headerlink" title="2.1 频域分析法"></a>2.1 频域分析法</h2><p>应用频率响应特性研究线性系统的经典方法称为频域分析法。<br>频率特性的物理意义明确，可以用分析法和实验方法获得。在进行系统分析和设计时可以应用图解法进行，直观方便。</p>
<h2 id="2-2-闭环系统的传递函数"><a href="#2-2-闭环系统的传递函数" class="headerlink" title="2.2 闭环系统的传递函数"></a>2.2 闭环系统的传递函数</h2><p>一个典型的反馈系统的结构图如图所示：<br>  <img src="/img/100.png" alt="图片名称"></p>
<p>G(s)代表被控对象，C(s)为控制器，H(s)为反馈。<br>在不考虑扰动的情况下，系统的闭环传递函数为<br>   <img src="/img/101.png" alt="图片名称"><br>因此系统可以等效为：<br>   <img src="/img/102.png" alt="图片名称"><br>系统的开环传递函数为：<br><strong><em>C(s)G(s)H(s)</em></strong>，代表回路增益。</p>
<p><font color="#ff0000" size="4" face="黑体">注意：此处的开环传递函数是针对闭环系统来说的，不是开环系统的传递函数。</font><br>由上面分析可知开环传递函数和闭环传递函数关系紧密，因此系统的开环频率特性很大程度上决定了系统的闭环性能。由于闭环系统包含反馈，校准过程较为复杂，而开环传递函数容易分析和设计，因此工程上常用开环传递函数来分析和设计控制器。</p>
<h2 id="2-3-系统辨识"><a href="#2-3-系统辨识" class="headerlink" title="2.3 系统辨识"></a>2.3 系统辨识</h2><p>系统的数学模型是对该系统动态本质的一种数学描述，体现实际系统运行中的动态信息。相应的，我们也可以用实验分析方法获得表征过程动态行为的输入输出数据，建立系统的数学模型。<br>系统辨识得到数学模型可以用于预测系统输出的未来演变，也可以用于设计控制器来对现有系统的做出改进。</p>
<h1 id="3-基本思路"><a href="#3-基本思路" class="headerlink" title="3. 基本思路"></a>3. 基本思路</h1><p>采集云台的输入输出数据（发送给yaw轴云台的目标角速度和云台的实际角速度），利用系统辨识得到传递函数，然后证明模型的正确性。</p>
<h1 id="4-实验平台和工具"><a href="#4-实验平台和工具" class="headerlink" title="4. 实验平台和工具"></a>4. 实验平台和工具</h1><p>硬件：RM步兵云台、stm32开发板、J-Link<br>软件：Keil、J-Scope、MATLAB(fdatool，systemIdentification)</p>
<h1 id="5-操作步骤"><a href="#5-操作步骤" class="headerlink" title="5. 操作步骤"></a>5. 操作步骤</h1><ol>
<li>在Yaw轴云台上加载速度环PID控制器，使得系统可以稳定运行</li>
<li>写一个简单的信号发生器，将频率逐渐增加的激励信号输入至PID控制器</li>
<li>采集并记录对应时刻的激励信号和角速度信息</li>
<li>对输入输出数据进行系统辨识得到系统闭环传递函数，用其他方法进行验证</li>
</ol>
<h2 id="5-1-MPU6500滤波设置"><a href="#5-1-MPU6500滤波设置" class="headerlink" title="5.1 MPU6500滤波设置"></a>5.1 MPU6500滤波设置</h2><p>查阅MPU6500的技术手册可知，陀螺仪有多个量程和带宽档位可以设置，为了达到更好的测量精度，需要根据应用需求进行设置。</p>
<p>经过初步测试，云台的正常工作角速度在±250°/s以内，因此设置量程为±250dps。<br>RM 6025电机能响应的电流信号频率为1kHz，根据采样定理，截止频率最高达到500Hz。因此设置MPU6500的带宽为3600Hz， 然后对数据进行低通滤波至500Hz。<br>如图所示，用fdatool生成截止频率为500Hz的4阶巴特沃斯滤波器：</p>
<p>导出系数，将传递函数形式转化为差分形式（具体过程请查阅信号与系统教材），然后在stm32工程里用C语言实现。</p>
<h2 id="5-2-速度环PID控制器"><a href="#5-2-速度环PID控制器" class="headerlink" title="5.2 速度环PID控制器"></a>5.2 速度环PID控制器</h2><p>根据经验和时域的响应情况，调节PID参数使得云台可以较为稳定的跟随目标角速度。</p>
<h2 id="5-3-激励信号的设计"><a href="#5-3-激励信号的设计" class="headerlink" title="5.3 激励信号的设计"></a>5.3 激励信号的设计</h2><p>产生频率从1Hz到500Hz变化的正弦信号，每个频率点持续20个周期。由于频率范围较大，且高频部分云台振幅变化较小，为了减少数据量，采用类指数形式的变化趋势。为了保证信号不会发生跳变，在每次信号频率发生变化时都需要从零相位开始，因此周期需要是整数。使用MATLAB生成的激励信号频率如下：<br>F = ([1:0.5:22, 24:2:40, 50:10:120,200,250,333,500]);<br>T = round(1000./F);         //周期取整<br>F = 1000./T;                 </p>
<h2 id="5-4-数据采集和处理"><a href="#5-4-数据采集和处理" class="headerlink" title="5.4 数据采集和处理"></a>5.4 数据采集和处理</h2><p>编译好stm32嵌入式工程后，配置J-Scope工程，Keil进入调试模式，设置好相关参数后启动程序，用J-Scope记录云台的期望角速度和实际角速度，采集完成后导出数据为csv格式。<br>注意：J-Scope只能读取整型的数据，因此需要把浮点型的角速度值转化成整型（这里采用的方法是乘以1000然后转成整数）<br>用MATLAB导入csv文件中的数据。<br>由于采集到的数据前后部分存在激励信号为零的非工作状态，会影响系统辨识的结果，因此需要去除。使用find函数找到激励信号首尾第一个不为零的数据的索引值，然后根据此索引值去掉输入输出信号首尾对应的部分，得到实验所需的时域数据。<br>处理后的时域数据绘制如下：<br> 由时域的图像可以明显看到，云台在高频下的振幅由明显衰减。</p>
<h2 id="5-5-系统辨识"><a href="#5-5-系统辨识" class="headerlink" title="5.5 系统辨识"></a>5.5 系统辨识</h2><p>在MATLAB的命令行窗口输入systemIdentification，打开系统辨识工具箱。<br>选择 Import data &gt; Time domain data ，打开导入数据对话框，在 input 和 output 选项中键入工作区的输入输出变量名，Starting time 和 Sample time 分别输入 0 和 0.001。其他部分选填。点击 Import 将数据加入System Identification工具，然后关闭对话框。</p>
<p>由于本实验数据平均值为零，带宽在500Hz以内，同时需要辨识所有数据，因此无需对数据做去均值、滤波、分割等预处理。直接选择 Estimate &gt; Transfer Function Models 打开传递函数对话框，设置零极点个数分别为1和2，点击 Estimate ，得到系统传递函数如下：</p>
<p>点击 Model output 和 Frequency resp 可以显示传递函数模型的拟合结果和频率响应图。</p>
<p>由 Model output 图像可知，该传递函数的输出结果拟合度达到88.58%，可以较好的刻画系统的动态特性。</p>
<h2 id="5-6-模型验证"><a href="#5-6-模型验证" class="headerlink" title="5.6 模型验证"></a>5.6 模型验证</h2><p>为了明确系统辨识得到的传递函数是否可信，可以采用以下两种方法进行验证。</p>
<h3 id="5-6-1-直接测量不同频率下的幅度比和相位差"><a href="#5-6-1-直接测量不同频率下的幅度比和相位差" class="headerlink" title="5.6.1 直接测量不同频率下的幅度比和相位差"></a>5.6.1 直接测量不同频率下的幅度比和相位差</h3><p>在stm32的程序中，通过查找一定时间内的云台角速度的极值找出幅度，通过计算输入输出信号上升沿穿过x轴的时间差除以周期来计算该频率下的相位差。<br>将不同频率点的幅度和相位数据保存在数组中，用Keil的SAVE命令导出内存数据（hex格式），经过处理（删除标志信息、数据分段、16进制转浮点数）后得到实测的频域数据，绘制bode图如下</p>
<h3 id="5-6-2-FFT处理时域数据"><a href="#5-6-2-FFT处理时域数据" class="headerlink" title="5.6.2 FFT处理时域数据"></a>5.6.2 FFT处理时域数据</h3><p>对时域数据做fft变换，然后计算输入输出数据的幅度比和相位差，得到系统的频率响应：</p>
<h3 id="5-6-3-综合对比"><a href="#5-6-3-综合对比" class="headerlink" title="5.6.3 综合对比"></a>5.6.3 综合对比</h3><p>对比三种方式得到的频率响应曲线：</p>
<p>由图可见，在低频部分，系统辨识得到的传递函数能够较好的拟合fft变换的结果和实测的频率响应结果，因此可以用该传递函数来刻画yaw轴云台系统。<br>由bode图可以看出3dB带宽大概为40rad/s，实际意义就是该云台系统能够响应的频率6.4Hz以内。</p>
<p>参考资料：<br>    1.J-Scope介绍及资料下载：<a href="https://www.segger.com/products/debug-probes/j-link/tools/j-scope" target="_blank" rel="noopener">https://www.segger.com/products/debug-probes/j-link/tools/j-scope</a></p>
<pre><code>2. System Identification 官方帮助文档：https://cn.mathworks.com/help/ident/index.html
3. Keil的SAVE命令用法：http://www.keil.com/support/man/docs/uv4/uv4_cm_save.htm
                               https://wenku.baidu.com/view/f5edb390551810a6f424865b.html
</code></pre><ol>
<li>奥本海姆. 《信号与系统(第二版)》. 电子工业出版社</li>
<li>胡寿松. 《自动控制原理(第四版)》. 科学出版社<ol>
<li>萧德云.《系统辨识理论及应用》.清华大学出版社</li>
</ol>
</li>
</ol>
<p>得到系统闭环传递函数后，经过处理可以得到开环传递函数进一步分析系统稳定性，还可以用频率分析法对环路进行整形，从而达到我们想要的性能，具体操作步骤会在后续的文章给大家介绍。敬请期待！<br>最后，欢迎大家跟帖提出问题和建议。</p>
]]></content>
      
        <categories>
            
            <category> Robomaster </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Testing </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CRC校验原理及步骤（转载）]]></title>
      <url>/2018/03/22/CRC%E6%A3%80%E9%AA%8C%E5%8E%9F%E7%90%86/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>什么是CRC校验？<br>CRC即循环冗余校验码：是数据通信领域中最常用的一种查错校验码，其特征是信息字段和校验字段的长度可以任意选定。循环冗余检查（CRC）是一种数据传输检错功能，对数据进行多项式计算，并将得到的结果附在帧的后面，接收设备也执行类似的算法，以保证数据传输的正确性和完整性。</p>
<p>CRC校验原理：<br><a id="more"></a><br>其根本思想就是先在要发送的帧后面附加一个数（这个就是用来校验的校验码，但要注意，这里的数也是二进制序列的，下同），生成一个新帧发送给接收端。当然，这个附加的数不是随意的，它要使所生成的新帧能与发送端和接收端共同选定的某个特定数整除（注意，这里不是直接采用二进制除法，而是采用一种称之为“模2除法”）。到达接收端后，再把接收到的新帧除以（同样采用“模2除法”）这个选定的除数。因为在发送端发送数据帧之前就已通过附加一个数，做了“去余”处理（也就已经能整除了），所以结果应该是没有余数。如果有余数，则表明该帧在传输过程中出现了差错。<br>模2除法：<br>模2除法与算术除法类似，但每一位除的结果不影响其它位，即不向上一位借位，所以实际上就是异或。在循环冗余校验码（CRC）的计算中有应用到模2除法。<br>例：</p>
<p>CRC校验步骤：<br>CRC校验中有两个关键点，一是预先确定一个发送送端和接收端都用来作为除数的二进制比特串（或多项式），可以随机选择，也可以使用国际标准，但是最高位和最低位必须为1；二是把原始帧与上面计算出的除数进行模2除法运算，计算出CRC码。</p>
<p>具体步骤：</p>
<ol>
<li>选择合适的除数</li>
<li>看选定除数的二进制位数，然后再要发送的数据帧上面加上这个位数-1位的0，然后用新生成的帧以模2除法的方式除上面的除数，得到的余数就是该帧的CRC校验码。注意，余数的位数一定只比除数位数少一位，也就是CRC校验码位数比除数位数少一位，如果前面位是0也不能省略。</li>
<li>将计算出来的CRC校验码附加在原数据帧后面，构建成一个新的数据帧进行发送；最后接收端在以模2除法方式除以前面选择的除数，如果没有余数，则说明数据帧在传输的过程中没有出错。</li>
</ol>
<p>CRC校验码计算示例：<br>现假设选择的CRC生成多项式为G（X） = X4 + X3 + 1，要求出二进制序列10110011的CRC校验码。下面是具体的计算过程：<br>①将多项式转化为二进制序列，由G（X） = X4 + X3 + 1可知二进制一种有五位，第4位、第三位和第零位分别为1，则序列为11001<br>②多项式的位数位5，则在数据帧的后面加上5-1位0，数据帧变为101100110000，然后使用模2除法除以除数11001，得到余数。</p>
<p>③将计算出来的CRC校验码添加在原始帧的后面，真正的数据帧为101100110100，再把这个数据帧发送到接收端。<br>④接收端收到数据帧后，用上面选定的除数，用模2除法除去，验证余数是否为0，如果为0，则说明数据帧没有出错。<br>转自：<a href="http://blog.csdn.net/D_leo/article/details/73572373" target="_blank" rel="noopener">http://blog.csdn.net/D_leo/article/details/73572373</a></p>
]]></content>
      
        <categories>
            
            <category> 技术类 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Testing </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第二篇测试文章]]></title>
      <url>/2018/01/26/volatile%E5%85%B3%E9%94%AE%E5%AD%97%E6%B5%85%E6%9E%90/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>#volatile<br>使用volatile关键字修饰变量，使对这些变量的存取不能缓存到寄存器，每次使用需要重新读取，在多线程环境下经常使用。  <font color="#ff0000" size="4" face="黑体">1.作为状态标志位：</font>由于volatile简化了编码，并且状态标识并不依赖于程序内其他状态，因此此处非常适合使用volatile。</p>
<p><a href="https://blog.csdn.net/jinfeiteng2008/article/details/53423858" target="_blank" rel="noopener">点我转至原创详情页</a> </p>
]]></content>
      
        <categories>
            
            <category> 计算机语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Testing </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[世界名车之劳斯莱斯]]></title>
      <url>/2018/01/26/%E5%8A%B3%E6%96%AF%E8%8E%B1%E6%96%AF/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>#走进世界名车—Rolls-Royce<br><img src="/img/car1.JPG" alt="图片名称"></p>
<ul>
<li><p>*劳斯莱斯（Rolls-Royce）是世界顶级的超豪华轿车厂商，1906年成立于英国，公司创始人为Frederick Henry Royce（亨利·莱斯）和Charles Stewart Rolls（查理·劳斯）。Rolls-Royce出产的轿车是顶级汽车的杰出代表，以其豪华而享誉全球，是欧美汽车（omeiche）的主要代表之一。<br>除了制造汽车，劳斯莱斯还涉足航空发动机制造的领域，也是一家优秀的发动机制造商，空客飞机部分型号用的就是劳斯莱斯的发动机。2003年，劳斯莱斯汽车公司被宝马（BMW）接手。</p>
<a id="more"></a>  
<p><img src="/img/car2.JPG" alt="图片名称"><br>劳斯莱斯（Rolls-Royce）是汽车王国雍容高贵的标志，无论劳斯莱斯的款式如何老旧，造价多么高昂，至今仍然没有挑战者。1906年劳斯莱斯（Rolls-Royce）在英国正式宣告成立，次年推出的Silver Ghost（银魂）轿车，不久便被誉为“世界上最好的汽车”。</p>
<p>劳斯莱斯创始人是Charles Stewart Rolls（查理·劳斯）和Frederick Henry Royce（亨利·莱斯），两人的出身、爱好、性格完全不同，但对汽车事业的执着和向往，使他们成为一对出色的搭档。Rolls于1910年7月12日在伯恩茅斯飞行展的一次飞行事故中坠机身亡，Royce于1933年4月22日去世。<br>最初的劳斯莱斯与其竞争对手相比具有两大特点：制造工艺简单、行驶时噪声极低，这两大优势很快就成为劳斯莱斯的经典。第一辆真正的传奇之作“银魂（SilverGhost）”诞生于1907年，它首次露面于巴黎汽车博览会，其金色钟顶形散热器非常引人注目，直到今天这一造型依然是劳斯莱斯不可替代的设计元素。除了独特的外观，Silver Ghost还拥有领先于时代的技术：强制润滑，7升六缸发动机输出功率可达48马力，最高车速达110km/h，这在当时绝对是一项世界记录。</p>
</li>
</ul>
<p>劳斯莱斯最与众不同之处，就在于它大量使用了手工劳动，在人工费相当高昂的英国，这必然会导致生产成本的居高不下，这也是劳斯莱斯价格惊人的原因之一。直到今天，劳斯莱斯的发动机还完全是用手工制造。更令人称奇的是，劳斯莱斯车头散热器的格栅完全是由熟练工人用手和眼来完成的，不用任何丈量的工具。而一台散热器需要一个工人一整天时间才能制造出来，然后还需要5个小时对它进行加工打磨。</p>
<p>现在，劳斯莱斯汽车的年产量只有几千辆，品牌的成功得益于它一直秉承了英国传统的造车艺术：精练、恒久、巨细无遗。因此令人难以置信的是，自1906年到现在，超过60%的劳斯莱斯仍然性能良好。<br>除了制造汽车，劳斯莱斯还涉足飞机发动机制造领域，它也是世界上最优秀的发动机制造者，著名的波音客机用的就是劳斯莱斯的发动机。</p>
<p>2003年劳斯莱斯汽车公司归入宝马公司（Bayerische Motoren Werke AG）旗下。<br>劳斯莱斯（Rolls-Royce）是指一系列的公司，它们都是从1906年由亨利·莱斯（Henry Royce）和查尔斯·劳斯（Charles Rolls）创建的劳斯莱斯有限公司分离而来的。这些公司包括如Rolls-Royce plc和Rolls-Royce Motors。<br>劳斯莱斯的昵称有“Rolls”、“Roller”和“Double R”，但在劳斯莱斯股份有限公司总部所在地──英国德比，公司通常称为“Royce’s”。<br>俗语“The Rolls-Royce of …”常用来形容某件事或物是最好的。</p>
<p>##车标故事<br>劳斯莱斯的标志图案采用两个“R”重叠在一起，象征着你中有我，我中有你，体现了两人融洽及和谐的关系。而著名的飞天女神标志则是源于一个浪漫的爱情故事。</p>
<p>##名字起源<br>“劳斯莱斯”和“罗尔斯·罗伊斯”均由英文Rolls-Royce翻译而来，二者的不同在于：生产汽车的叫劳斯莱斯，生产发动机的叫“罗尔斯·罗伊斯”。罗尔斯·罗伊斯是世界三大航空发动机生产商之一。</p>
]]></content>
      
        <categories>
            
            <category> 汽车之家 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> testing </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第二篇测试文章]]></title>
      <url>/2018/01/26/%E6%88%91%E7%9A%84%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0%20/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>#一级标题233</p>
<h2 id="二级标题666"><a href="#二级标题666" class="headerlink" title="二级标题666"></a>二级标题666</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><p><img src="/img/7.jpg" alt="图片名称"><br><a id="more"></a><br><em>斜体文本</em>     <em>斜体文本</em>位<br><strong>粗体文本</strong>    <strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong>    <strong><em>粗斜体文本</em></strong></p>
<p>常用链接方法<br>文字链接 <a href="https://luosiwu.github.io" target="_blank" rel="noopener">我的git</a><br>网址链接 <a href="https://chwshuang.github.io" target="_blank" rel="noopener">https://chwshuang.github.io</a><br>高级链接技巧  </p>
<p><font color="#ff0000" size="4" face="黑体">红体字</font><br>这个链接用 1 作为网址变量 <a href="http://www.google.com/" target="_blank" rel="noopener">Google</a>.<br>这个链接用 yahoo 作为网址变量 <a href="http://www.yahoo.com/" target="_blank" rel="noopener">Yahoo!</a>.<br>然后在文档的结尾为变量赋值（网址）</p>
<p>换行<br>如果另起一行，只需在当前行结尾加 2 个空格  </p>
]]></content>
      
        <categories>
            
            <category> 测试 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Testing </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
